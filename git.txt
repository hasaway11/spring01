※ 소규모 팀을 위한 협업
1. main + feature/* 브랜치만 사용
   - main: 안정 버전 + 단기간 feature 병합 허용

2. 팀장이 main 브랜치를 생성 후 푸시
   - 인텔리에서 새로운 브랜치를 만들면 내용은 모두 복사된다

3. 팀원은 자신의 /feature 브랜치를 생성
   - 진행중인 프로젝트는 /main으로, 팀원 각자의 코드는 /feature로 푸시해서 관리

4. 로컬 작업 최소화
  - 원칙: feature 브랜치를 최소 1일 1푸시 → 원격에 백업

5. 각 팀원은 푸시할 자신의 작업 메인 브랜치와 로컬 전용 브랜치를 만든다
  - /feature/real-login
  - /feature/mok-login

6. /feature/mok-login에서 마음대로 작업한 다음 완성됐다면 /feature/real-login으로 보내 정식으로 테스트를 수행
  - 다른 팀원들의 피드백을 받는다
  - 필요없는 파일이 푸시되지 않도록 다시 한번 확인한다

7. 완성된 코드를 /main으로 푸시한다

8. 브랜치 삭제
- 삭제조건
    main (또는 develop)에 완전히 머지되었을 때
    다시 사용할 계획이 없을 때(로그인 기능이 완성되어 향후 추가 작업이 필요 없다)
- 유지할 경우
    추가 작업이 남았을 때(소셜 로그인 연동으로 확장 계획이 있다든지)
    버그가 발생할 지도 모를 때
- 따라서 팀 규칙에 따라 머지 후 1주일 후 삭제와 같이 기한을 정하는 방법이 있다
